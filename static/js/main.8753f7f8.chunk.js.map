{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","valueMax","setValueMax","valueIs","setValueIs","count","setCount","className","htmlFor","type","placeholder","min","value","onChange","e","target","onClick","is","max","outTxt","document","querySelector","classList","add","parseFloat","toFixed","remove","handleCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gMAoDeA,MAjDf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KA6BA,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,OAAf,UACA,uBAAOC,QAAQ,MAAf,8BACE,uBAAOC,KAAK,SAASC,YAAY,IAAIC,IAAI,IAAIC,MAAOT,EAASU,SA5B/C,SAACC,GACnB,OAAOV,EAAWU,EAAEC,OAAOH,UA4BvB,uBAAOJ,QAAQ,MAAf,qDACA,uBAAOC,KAAK,SAASC,YAAY,IAAIC,IAAI,IAAIC,MAAOX,EAAUY,SAjC/C,SAACC,GACpB,OAAOZ,EAAYY,EAAEC,OAAOH,UAiCxB,wBAAQI,QAAS,YA3BL,SAACC,EAAGC,GACpB,IAAMC,EAASC,SAASC,cAAc,cACtCF,EAAOG,UAAUC,IAAI,UAClBN,GAAM,GAAKC,EAAM,GAChBZ,EAASkB,WAAc,IAAHP,EAAOC,GAAKO,QAAQ,GAAK,KAC7CN,EAAOG,UAAUI,OAAO,OACxBP,EAAOG,UAAUC,IAAI,WAGvBjB,EAAS,eACTa,EAAOG,UAAUC,IAAI,OACrBJ,EAAOG,UAAUI,OAAO,UAgBAC,CAAYxB,EAAQF,IAA1C,oBACA,wBAAQM,UAAU,MAAMS,QAdd,WAChBV,EAAS,IACTF,EAAW,IACXF,EAAY,IACZkB,SAASC,cAAc,cAAcC,UAAY,UAU3C,sBAEF,qBAAKf,UAAU,SAAf,SACE,6BAAKF,UClCEuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,SAM1BZ,K","file":"static/js/main.8753f7f8.chunk.js","sourcesContent":["import './App.css'\nimport React,{useState} from 'react';\n\nfunction App() {\n  const [valueMax, setValueMax] = useState('');\n  const [valueIs, setValueIs] = useState('');\n  const [count, setCount] = useState('');\n  \n  const handleValueMax=(e)=>{\n    return setValueMax(e.target.value)\n  }\n  const handleValueIs=(e)=>{\n    return setValueIs(e.target.value)\n  }\n\n  const handleCount=(is,max)=>{\n    const outTxt = document.querySelector('div.outTxt');\n    outTxt.classList.add('active');\n    if(is >= 0 && max > 0) {\n        setCount(parseFloat(is*100/max).toFixed(2) + '%');\n        outTxt.classList.remove('red')\n        outTxt.classList.add('green')\n    }\n    else{\n      setCount('brak danych');\n      outTxt.classList.add('red');\n      outTxt.classList.remove('green');\n    }\n  }\nconst handleReset=()=>{\n  setCount('');\n  setValueIs('');\n  setValueMax('');\n  document.querySelector('div.outTxt').classList = 'outTxt';\n}\n  return (\n    <div className=\"wrapper\">\n      <div className='form'>\n      <label htmlFor=\"max\">Zdobyte punkty: </label>\n        <input type=\"number\" placeholder='0' min='0' value={valueIs} onChange={handleValueIs}/>\n        <label htmlFor=\"max\">Maksymalna ilość punktów: </label>\n        <input type=\"number\" placeholder='0' min='0' value={valueMax} onChange={handleValueMax}/>\n        <button onClick={()=>{handleCount(valueIs,valueMax)}}>Policz</button>\n        <button className='rst' onClick={handleReset}>Reset</button>\n      </div>\n      <div className='outTxt'>\n        <h1>{count}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}